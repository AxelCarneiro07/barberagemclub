const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const path = require('path');
const fs = require('fs');
require('dotenv').config();

const app = express();

// CORS configuration
const allowedOrigins = process.env.ALLOWED_ORIGINS 
  ? process.env.ALLOWED_ORIGINS.split(',') 
  : ['https://yourwebsite.com'];

const corsOptions = {
  origin: function (origin, callback) {
    // In development, allow requests with no origin (like mobile apps or curl requests)
    if (!origin || allowedOrigins.indexOf(origin) !== -1) {
      callback(null, true);
    } else {
      callback(new Error('Not allowed by CORS'));
    }
  },
  credentials: true
};

app.use(cors(corsOptions));
app.use(bodyParser.json());

// Serve static files from the frontend directory
// Adjust path as needed based on your hosting setup
const frontendPath = process.env.FRONTEND_PATH || path.join(__dirname, '../frontend');
app.use(express.static(frontendPath));

// Serve HTML pages
const serveHtmlPage = (page) => {
  return (req, res) => {
    const filePath = path.join(frontendPath, page);
    if (fs.existsSync(filePath)) {
      res.sendFile(filePath);
    } else {
      res.status(404).send(`Arquivo não encontrado: ${page}`);
    }
  };
};

app.get('/cadastro.html', serveHtmlPage('cadastro.html'));
app.get('/login.html', serveHtmlPage('login.html'));
app.get('/admin.html', serveHtmlPage('admin.html'));
app.get('/barberagemclub.html', serveHtmlPage('barberagemclub.html'));
app.get('/produtos.html', serveHtmlPage('produtos.html'));
app.get('/parceiros.html', serveHtmlPage('parceiros.html'));

// Root route - redirect to home page
app.get('/', (req, res) => {
  res.redirect('/barberagemclub.html');
});

// Import authentication routes
try {
  const authRoutes = require('./routes/auth');
  app.use(authRoutes);
  console.log('Rotas de autenticação carregadas com sucesso!');
} catch (error) {
  console.log('Erro ao carregar rotas de autenticação:', error.message);
  console.log('Servidor funcionará apenas para servir arquivos HTML');
}

// Catch-all route to handle SPA routing if needed
app.get('*', (req, res) => {
  res.redirect('/barberagemclub.html');
});

const PORT = process.env.PORT || 3000;

app.listen(PORT, () => {
  console.log(`Servidor rodando em http://localhost:${PORT} no modo ${process.env.NODE_ENV || 'development'}`);
});